[{"C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\index.js":"1","C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\App.js":"2","C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\containers\\Movies\\Movies.js":"3","C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\store\\reducer.js":"4","C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\components\\Movie.js":"5","C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\containers\\Favourites\\Favourites.js":"6"},{"size":687,"mtime":1608998785604,"results":"7","hashOfConfig":"8"},{"size":1150,"mtime":1608998780751,"results":"9","hashOfConfig":"8"},{"size":2119,"mtime":1608998770714,"results":"10","hashOfConfig":"8"},{"size":463,"mtime":1609072327341,"results":"11","hashOfConfig":"8"},{"size":275,"mtime":1608998805016,"results":"12","hashOfConfig":"8"},{"size":654,"mtime":1608998963684,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xc6ofz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\index.js",[],["29","30"],"C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\App.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\containers\\Movies\\Movies.js",["31"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Movies.css\";\r\nimport Movie from \"../../components/Movie\";\r\nimport { connect } from \"react-redux\";\r\nconst Movies = (props) => {\r\n  let [search, setSearch] = useState(\"\");\r\n  let [movies, setMovies] = useState({});\r\n  let [render, setRender] = useState(false);\r\n  let [oldSearch, setOldSearch] = useState(null);\r\n  const options = {\r\n    method: \"GET\",\r\n    url: \"https://imdb8.p.rapidapi.com/title/auto-complete\",\r\n    params: { q: search },\r\n    headers: {\r\n      \"x-rapidapi-key\": \"6ddacadffemsh3f7c41a84ac428dp104bf5jsnc0be7264a640\",\r\n      \"x-rapidapi-host\": \"imdb8.p.rapidapi.com\",\r\n    },\r\n  };\r\n  const onSearch = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  const retrieveData = () => {\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        setMovies(response.data.d);\r\n        console.log(movies);\r\n        setRender(true);\r\n        setOldSearch(search);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n  let printMovies = null;\r\n  if (render && movies) {\r\n    printMovies = movies.map((movie) =>\r\n      movie.i ? (\r\n        <Movie\r\n          source={movie.i.imageUrl}\r\n          key={movie.id}\r\n          add={() => props.addFavourite(movie)}\r\n        />\r\n      ) : null\r\n    );\r\n  } else if (!movies) {\r\n    printMovies = (\r\n      <p style={{ fontWeight: \"bolder\" }}>\r\n        No results found with input \"{oldSearch}\"\r\n      </p>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <div class=\"search\">\r\n        <input onChange={onSearch} placeholder=\"ex. Home alone\" />\r\n        <button onClick={retrieveData}>Search</button>\r\n      </div>\r\n      <div className=\"Movies\">{printMovies}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favourites: state.favourites,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    addFavourite: (movie) => dispatch({ type: \"ADDTOFAVOURITE\", movie: movie }),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Movies);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\store\\reducer.js",["32"],"C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\components\\Movie.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Movies-React-App\\movies\\src\\containers\\Favourites\\Favourites.js",["33"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Favourites.css\";\r\nimport Movie from \"../../components/Movie\";\r\nconst Favourites = (props) => {\r\n  return (\r\n    <div className=\"Favourites\">\r\n      {props.favourites.length > 0 ? (\r\n        props.favourites.map((movie) => {\r\n          return <img src={movie.i.imageUrl} alt=\"Error loading\" />;\r\n        })\r\n      ) : (\r\n        <p>Start adding favourites in the Search for a movie tab!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favourites: state.favourites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Favourites);\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":27,"nodeType":"40","messageId":"41","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"43","line":15,"column":5,"nodeType":"44","messageId":"45","endLine":16,"endColumn":20},{"ruleId":"38","severity":1,"message":"46","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":13},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'Movie' is defined but never used.","no-global-assign","no-unsafe-negation"]